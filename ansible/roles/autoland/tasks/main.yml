---
- include: repos.yml
- include: packages.yml

- name: create autoland user
  become: true
  user: name=autoland
        shell=/bin/bash
        system=yes
        state=present

- name: chmod autoland home
  file: path=/home/autoland
        mode=0755

- include: ssh.yml

- name: create virtualenv for autoland
  include: ../../../tasks/virtualenv.yml
           venv=/home/autoland/autoland_venv
           requirements=../../../../requirements.txt

- name: clone source repo
  become: true
  become_user: autoland
  git: repo="{{ autoland_repo }}"
       dest=/home/autoland/autoland-transplant

# Ansible git module fails to delete ignored files so we do that here
- name: delete ignored files from autoland-transplant repo
  become: true
  become_user: autoland
  command: git clean -f -Xd
  args:
    chdir: /home/autoland/autoland-transplant

- name: install autoland site hgrc
  copy: src=../files/autoland_hgrc
        dest=/home/autoland/.hgrc
        owner=autoland
        group=autoland
        mode=0644

- name: set custom selinux rule for virtualenv
  command: semanage fcontext -a -t httpd_sys_script_exec_t "/home/autoland/autoland_venv(/.*)?"

- name: apply selinux policy to virtualenv
  command: restorecon -Rv /home/autoland/autoland_venv/

- name: set custom selinux rule for autoland
  command: semanage fcontext -a -t httpd_sys_script_exec_t "/home/autoland/autoland-transplant/autoland(/.*)?"

- name: apply selinux policy to autoland
  command: restorecon -Rv /home/autoland/autoland-transplant/autoland/

- name: set custom selinux rule for autoland config
  command: semanage fcontext -a -t httpd_sys_content_t /home/autoland/config.json

- name: apply selinux policy to autoland config
  command: restorecon -v /home/autoland/config.json

- name: set selinux to allow httpd connentions to rds
  command: setsebool -P httpd_can_network_connect_db 1

- name: check if autoland service exists
  stat: path=/etc/systemd/system/autoland.service
  register: service_status

- name: stop autoland service
  service: name=autoland
           state=stopped
  when: service_status.stat.exists

- name: install autoland service
  copy: dest=/etc/systemd/system/autoland.service
        src=../files/autoland.service
        mode=0664

- name: reload systemd
  systemd: daemon_reload=yes

- name: install config.json
  template: src=config.json.j2
            dest=/home/autoland/config.json
            owner=autoland
            group=autoland
            mode=0600

- name: enable autoland service
  service: name=autoland
           state=restarted
           enabled=yes

- name: setup main conf file
  copy: src=../files/httpd.conf
        dest=/etc/httpd/conf/httpd.conf

- name: remove conf.d
  file: path=/etc/httpd/conf.d/
        state=absent

- name: install autoland site
  copy: src=../files/autoland_httpd.conf
        dest=/etc/httpd/conf/autoland.conf

- name: start/reload apache
  service: name=httpd
           state=reloaded
           enabled=yes

- name: remove version-control-tools repo
  file: path=/home/autoland/version-control-tools
        state=absent
